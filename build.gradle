buildscript {
	ext {
		springBootVersion = '1.3.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
 apply plugin: 'war'

bootRun {
	addResources = true
}

war {
	baseName = 'shadowmessage'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
	mavenCentral()
}

/*
http://docs.spring.io/spring-boot/docs/current/reference/html/build-tool-plugins-gradle-plugin.html

To build a war file that is both executable and deployable into an external
container, you need to mark the embedded container dependencies
as belonging to a configuration named “providedRuntime”, e.g:
 */
configurations {
	providedRuntime
}

bootRepackage {
	mainClass = 'net.toregard.SpringBootApplication'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-cache')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	//compile('org.springframework.boot:spring-boot-starter-mobile')
	compile('org.springframework.boot:spring-boot-starter-validation')

	compile('org.springframework.boot:spring-boot-starter-ws')

	compile("org.springframework.boot:spring-boot-devtools")

	//runtime('mysql:mysql-connector-java')
	compile('com.h2database:h2')

	compile('org.springframework.boot:spring-boot-starter-web')
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('com.h2database:h2')
	//testCompile('mysql:mysql-connector-java')
	testCompile "org.mockito:mockito-core:2.+"
}


task wrapper(type: Wrapper) {
	gradleVersion = '2.12'
}
